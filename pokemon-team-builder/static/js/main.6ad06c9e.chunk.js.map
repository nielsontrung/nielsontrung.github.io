{"version":3,"sources":["reportWebVitals.js","components/BarChart.js","components/TypeEffectiveness.js","components/Header.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BarChart","props","data","HP","Att","Def","SAtt","SDef","Spd","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","width","options","indexAxis","scales","x","beginAtZero","Total","TypeEffectiveness","types","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","names","typeChart","getColumn","type","defensiveEffectiveness","i","push","typeEffectiveness","type1","type2","type1Effectiveness","type2Effectiveness","result","effectiveness","dict","quadEffective","superEffective","resists","immune","getDefensiveTypeEffectiveness","Type","Type2","getEffectiveness","map","className","hasQuad","hasSuper","hasNormal","hasResists","hasImmune","length","Header","App","addTeamMember","pokemon","updatedTeam","state","team","setState","removeTeamMember","index","indexOf","splice","gen","gens","stat","stats","name","teamStats","bind","require","this","fillColour","borderColour","filterPokemon","filter","pokemonType","pokemonType2","pokemonGen","Gen","toString","pokemonName","Name","toLowerCase","includes","handleSelect","event","target","value","fill","border","style","console","log","src","No","alt","onClick","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"63u0BAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yCCoDCQ,MAxDf,SAAkBC,GAChB,IAAIC,EAAO,CACTD,EAAME,GACNF,EAAMG,IACNH,EAAMI,IACNJ,EAAMK,KACNL,EAAMM,KACNN,EAAMO,KAER,OACE,gCACE,cAAC,IAAD,CACEN,KAAM,CACJO,OAAQ,CAAC,KAAM,MAAO,MAAO,QAAS,QAAS,OAC/CC,SAAU,CACR,CACEC,MAAO,aACPT,KAAMA,EACNU,gBAAiB,CACf,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEFC,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEFC,YAAa,KAInBC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACPC,UAAW,IACXC,OAAQ,CACNC,EAAG,CACDC,aAAa,OAKrB,4BACE,uCAAUpB,EAAMqB,e,MCgLTC,MApOf,SAA2BtB,GACzB,IAAMuB,EAAQ,CACZC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,EACVC,MAAO,EACPC,IAAK,EACLC,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,QAAS,GACTC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,MAAO,IAGHC,EAAQ,CACZ,EAAG,SACH,EAAG,OACH,EAAG,QACH,EAAG,WACH,EAAG,QACH,EAAG,MACH,EAAG,WACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,GAAI,WACJ,GAAI,OACJ,GAAI,QACJ,GAAI,SACJ,GAAI,UACJ,GAAI,QACJ,GAAI,SACJ,GAAI,UAGAC,EAAY,CAChB,CACE,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACtE,EAAK,GAAK,GAEZ,CACE,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GACtE,EAAK,EAAK,GAEZ,CACE,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACtE,EAAK,EAAK,GAEZ,CACE,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACtE,EAAK,EAAK,GAEZ,CACE,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GACtE,EAAK,GAAK,GAEZ,CACE,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACtE,EAAK,GAAK,GAEZ,CACE,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EACtE,EAAK,EAAK,IAEZ,CACE,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EACtE,EAAK,EAAK,GAEZ,CACE,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EACtE,EAAK,EAAK,GAEZ,CACE,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EACtE,EAAK,GAAK,GAEZ,CACE,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EACtE,EAAK,GAAK,GAEZ,CACE,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EACtE,EAAK,GAAK,IAEZ,CACE,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACtE,EAAK,GAAK,GAEZ,CACE,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EA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","file":"static/js/main.6ad06c9e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction BarChart(props) {\r\n  let data = [\r\n    props.HP,\r\n    props.Att,\r\n    props.Def,\r\n    props.SAtt,\r\n    props.SDef,\r\n    props.Spd,\r\n  ];\r\n  return (\r\n    <div>\r\n      <Bar\r\n        data={{\r\n          labels: [\"Hp\", \"Att\", \"Def\", \"S.Att\", \"S.Def\", \"Spd\"],\r\n          datasets: [\r\n            {\r\n              label: \"Base Stats\",\r\n              data: data,\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 1)\",\r\n                \"rgba(54, 162, 235, 1)\",\r\n                \"rgba(255, 206, 86, 1)\",\r\n                \"rgba(75, 192, 192, 1)\",\r\n                \"rgba(153, 102, 255, 1)\",\r\n                \"rgba(255, 159, 64, 1)\",\r\n              ],\r\n              borderColor: [\r\n                \"rgba(255, 99, 132, 1)\",\r\n                \"rgba(54, 162, 235, 1)\",\r\n                \"rgba(255, 206, 86, 1)\",\r\n                \"rgba(75, 192, 192, 1)\",\r\n                \"rgba(153, 102, 255, 1)\",\r\n                \"rgba(255, 159, 64, 1)\",\r\n              ],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        height={200}\r\n        width={200}\r\n        options={{\r\n          indexAxis: \"y\",\r\n          scales: {\r\n            x: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <p>\r\n        <b>Total {props.Total}</b>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import \"./TypeEffectiveness.css\";\r\nfunction TypeEffectiveness(props) {\r\n  const types = {\r\n    normal: 0,\r\n    fire: 1,\r\n    water: 2,\r\n    electric: 3,\r\n    grass: 4,\r\n    ice: 5,\r\n    fighting: 6,\r\n    poison: 7,\r\n    ground: 8,\r\n    flying: 9,\r\n    psychic: 10,\r\n    bug: 11,\r\n    rock: 12,\r\n    ghost: 13,\r\n    dragon: 14,\r\n    dark: 15,\r\n    steel: 16,\r\n    fairy: 17,\r\n  };\r\n\r\n  const names = {\r\n    0: \"normal\",\r\n    1: \"fire\",\r\n    2: \"water\",\r\n    3: \"electric\",\r\n    4: \"grass\",\r\n    5: \"ice\",\r\n    6: \"fighting\",\r\n    7: \"poison\",\r\n    8: \"ground\",\r\n    9: \"flying\",\r\n    10: \" psychic\",\r\n    11: \" bug\",\r\n    12: \" rock\",\r\n    13: \" ghost\",\r\n    14: \" dragon\",\r\n    15: \" dark\",\r\n    16: \" steel\",\r\n    17: \" fairy\",\r\n  };\r\n\r\n  const typeChart = [\r\n    [\r\n      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0,\r\n      1.0, 0.5, 1.0,\r\n    ], //normal\r\n    [\r\n      1.0, 0.5, 0.5, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.5, 1.0, 0.5,\r\n      1.0, 2.0, 1.0,\r\n    ], //fire\r\n    [\r\n      1.0, 2.0, 0.5, 1.0, 0.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 0.5,\r\n      1.0, 1.0, 1.0,\r\n    ], //water\r\n    [\r\n      1.0, 1.0, 2.0, 0.5, 0.5, 1.0, 1.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.5,\r\n      1.0, 1.0, 1.0,\r\n    ], //electric\r\n    [\r\n      1.0, 0.5, 2.0, 1.0, 0.5, 1.0, 1.0, 0.5, 2.0, 0.5, 1.0, 0.5, 2.0, 1.0, 0.5,\r\n      1.0, 0.5, 1.0,\r\n    ], //grass\r\n    [\r\n      1.0, 0.5, 0.5, 1.0, 2.0, 0.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0,\r\n      1.0, 0.5, 1.0,\r\n    ], //ice\r\n    [\r\n      2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 0.5, 1.0, 0.5, 0.5, 0.5, 2.0, 0.0, 1.0,\r\n      2.0, 2.0, 0.5,\r\n    ], //fighting\r\n    [\r\n      1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.5, 0.5, 1.0, 1.0, 1.0, 0.5, 0.5, 1.0,\r\n      1.0, 0.0, 2.0,\r\n    ], //poison\r\n    [\r\n      1.0, 2.0, 1.0, 2.0, 0.5, 1.0, 1.0, 2.0, 1.0, 0.0, 1.0, 0.5, 2.0, 1.0, 1.0,\r\n      1.0, 2.0, 1.0,\r\n    ], //ground\r\n    [\r\n      1.0, 1.0, 1.0, 0.5, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.5, 1.0, 1.0,\r\n      1.0, 0.5, 1.0,\r\n    ], //flying\r\n    [\r\n      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 1.0,\r\n      0.0, 0.5, 1.0,\r\n    ], //psychic\r\n    [\r\n      1.0, 0.5, 1.0, 1.0, 2.0, 1.0, 0.5, 0.5, 1.0, 0.5, 2.0, 1.0, 1.0, 0.5, 1.0,\r\n      2.0, 0.5, 0.5,\r\n    ], //bug\r\n    [\r\n      1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 0.5, 1.0, 0.5, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0,\r\n      1.0, 0.5, 1.0,\r\n    ], //rock\r\n    [\r\n      0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0,\r\n      0.5, 1.0, 1.0,\r\n    ], //ghost\r\n    [\r\n      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0,\r\n      1.0, 0.5, 0.0,\r\n    ], //dragon\r\n    [\r\n      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0,\r\n      0.5, 1.0, 0.5,\r\n    ], //dark\r\n    [\r\n      1.0, 0.5, 0.5, 0.5, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0,\r\n      1.0, 0.5, 2.0,\r\n    ], //steel\r\n    [\r\n      1.0, 0.5, 1.0, 1.0, 1.0, 1.0, 2.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0,\r\n      2.0, 0.5, 1.0,\r\n    ], //fairy\r\n  ];\r\n\r\n  // up and down for defensive effectiveness\r\n  // left right for offensive effectiveness\r\n  // function getOffensiveTypeEffectiveness(type) {\r\n  //   return typeChart[types[type]];\r\n  // }\r\n\r\n  function getColumn(type) {\r\n    let defensiveEffectiveness = [];\r\n    for (let i = 0; i < 18; i++) {\r\n      defensiveEffectiveness.push(typeChart[i][types[type]]);\r\n    }\r\n    return defensiveEffectiveness;\r\n  }\r\n\r\n  function getDefensiveTypeEffectiveness(type1, type2) {\r\n    let type1Effectiveness = getColumn(type1);\r\n    let type2Effectiveness = getColumn(type2);\r\n    let result = [];\r\n\r\n    if (type2 === \"\") {\r\n      result = type1Effectiveness;\r\n    } else {\r\n      for (let i = 0; i < 18; i++) {\r\n        let effectiveness = type1Effectiveness[i] * type2Effectiveness[i];\r\n        if (effectiveness === 0.25) effectiveness = 0.5;\r\n        result.push(effectiveness);\r\n      }\r\n    }\r\n\r\n    let dict = {\r\n      quadEffective: [],\r\n      superEffective: [],\r\n      normal: [],\r\n      resists: [],\r\n      immune: [],\r\n    };\r\n\r\n    for (let i = 0; i < 18; i++) {\r\n      if (result[i] === 0) dict.immune.push(names[i]);\r\n      else if (result[i] === 0.5) dict.resists.push(names[i]);\r\n      else if (result[i] === 1) dict.normal.push(names[i]);\r\n      else if (result[i] === 2) dict.superEffective.push(names[i]);\r\n      else if (result[i] === 4) dict.quadEffective.push(names[i]);\r\n    }\r\n\r\n    return dict;\r\n  }\r\n  const typeEffectiveness = getDefensiveTypeEffectiveness(\r\n    props.Type,\r\n    props.Type2\r\n  );\r\n\r\n  function getEffectiveness(typeEffectiveness, effectiveness) {\r\n    return typeEffectiveness[effectiveness].map((type) => (\r\n      <div key={type} className={`${type} grid-item`}>\r\n        {type}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  const hasQuad = getEffectiveness(typeEffectiveness, \"quadEffective\");\r\n  const hasSuper = getEffectiveness(typeEffectiveness, \"superEffective\");\r\n  const hasNormal = getEffectiveness(typeEffectiveness, \"normal\");\r\n  const hasResists = getEffectiveness(typeEffectiveness, \"resists\");\r\n  const hasImmune = getEffectiveness(typeEffectiveness, \"immune\");\r\n\r\n  // const efffectiveness = [\r\n  //   \"quadEffective\",\r\n  //   \"superEffective\",\r\n  //   \"normal\",\r\n  //   \"resists\",\r\n  //   \"immune\",\r\n  // ];\r\n\r\n  return (\r\n    <div className={`type-effectiveness-container`}>\r\n      {hasQuad.length === 0 ? null : (\r\n        <div>\r\n          <p>Takes 4x</p>\r\n          <div className={\"grid-container\"}>{hasQuad}</div>\r\n        </div>\r\n      )}\r\n      {hasSuper ? (\r\n        <div>\r\n          <p>Takes 2x</p>\r\n          <div className={\"grid-container\"}>{hasSuper}</div>\r\n        </div>\r\n      ) : null}\r\n      {hasNormal ? (\r\n        <div>\r\n          <p>Takes 1x</p>\r\n          <div className={\"grid-container\"}>{hasNormal}</div>\r\n        </div>\r\n      ) : null}\r\n      {hasResists ? (\r\n        <div>\r\n          <p>Takes 0.5x</p>\r\n          <div className={\"grid-container\"}>{hasResists}</div>\r\n        </div>\r\n      ) : null}\r\n      {hasImmune.length === 0 ? null : (\r\n        <div>\r\n          <p>Takes 0x</p>\r\n          <div className={\"grid-container\"}>{hasImmune}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypeEffectiveness;\r\n","import \"./Header.css\";\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <h1>Pokemon Team Builder</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n// style imports\nimport \"./index.css\";\nimport \"./styles/types.css\";\nimport \"./components/Icon.css\";\nimport \"./components/IconContainer.css\";\n// component imports\nimport BarChart from \"./components/BarChart\";\nimport TypeEffectiveness from \"./components/TypeEffectiveness\";\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gen: \"all\",\n      gens: [\"all\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"],\n      type: \"all\",\n      type2: \"all\",\n      types: [\n        \"all\",\n        \"normal\",\n        \"fire\",\n        \"water\",\n        \"electric\",\n        \"grass\",\n        \"ice\",\n        \"fighting\",\n        \"poison\",\n        \"ground\",\n        \"flying\",\n        \"psychic\",\n        \"bug\",\n        \"rock\",\n        \"ghost\",\n        \"dragon\",\n        \"dark\",\n        \"steel\",\n        \"fairy\",\n      ],\n      stat: \"none\",\n      stats: [\"None\", \"Hp\", \"Att\", \"Def\", \"SpAtt\", \"SpDef\", \"Spd\", \"Total\"],\n      name: \"\",\n      pokemon: [],\n      team: [],\n      teamStats: [],\n    };\n\n    this.addTeamMember = this.addTeamMember.bind(this);\n    this.removeTeamMember = this.removeTeamMember.bind(this);\n  }\n\n  componentDidMount() {\n    const pokemon = require(\"./nationaldex.json\");\n    this.setState({ pokemon: pokemon });\n  }\n\n  addTeamMember = (pokemon) => {\n    let updatedTeam = this.state.team;\n    updatedTeam.push(pokemon);\n    this.setState({ team: updatedTeam });\n  };\n\n  removeTeamMember = (pokemon) => {\n    let updatedTeam = this.state.team;\n    const index = updatedTeam.indexOf(pokemon);\n    if (index > -1) {\n      updatedTeam.splice(index, 1);\n    }\n    this.setState({ team: updatedTeam });\n  };\n\n  render() {\n    const pokemon = this.state.pokemon;\n\n    // used to render the dropdown filters\n    const gens = this.state.gens;\n    const types = this.state.types;\n    const stats = this.state.stats;\n\n    // used to filter pokemon\n    const type = this.state.type;\n    const type2 = this.state.type2;\n    const gen = this.state.gen;\n    // const stat = this.state.stat;\n    const name = this.state.name;\n\n    // styles\n    const fillColour = {\n      normal: \"a7a87a\",\n      fighting: \"ba2a28\",\n      flying: \"a88eee\",\n      poison: \"c183c1\",\n      ground: \"ddc06c\",\n      rock: \"b5a03f\",\n      bug: \"a8b930\",\n      ghost: \"705696\",\n      steel: \"b8b8cf\",\n      fire: \"e97e35\",\n      water: \"6f8fee\",\n      grass: \"7eca58\",\n      electric: \"f4d03f\",\n      psychic: \"f15287\",\n      ice: \"9ed9d8\",\n      dragon: \"722ef5\",\n      dark: \"6e5849\",\n      fairy: \"e997ab\",\n      //??? : \"6da191\",\n    };\n    const borderColour = {\n      normal: \"6d6d4f\",\n      fighting: \"7d1f1a\",\n      flying: \"6d5d9a\",\n      poison: \"662767\",\n      ground: \"907d47\",\n      rock: \"766828\",\n      bug: \"6d791f\",\n      ghost: \"493862\",\n      steel: \"787887\",\n      fire: \"985222\",\n      water: \"485d9a\",\n      grass: \"528339\",\n      electric: \"9e8728\",\n      psychic: \"a13959\",\n      ice: \"678d8d\",\n      dragon: \"4a1e9f\",\n      dark: \"48392f\",\n      fairy: \"986370\",\n      // ???: \"47685e\"\n    };\n\n    const team = this.state.team;\n\n    const filterPokemon = pokemon.filter((pokemon) => {\n      let pokemonType = pokemon.Type;\n      let pokemonType2 = pokemon.Type2;\n      let pokemonGen = pokemon.Gen.toString();\n      let pokemonName = pokemon.Name.toLowerCase();\n\n      // get pokemon by name\n      if (name === \"\") {\n        // return pokemon from certain generation with\n        // specific primary and secondary type\n        if (\n          pokemonGen === gen &&\n          pokemonType === type &&\n          pokemonType2 === type2\n        )\n          return pokemon;\n        // get pokemon based on generation and primary type\n        else if (pokemonGen === gen && pokemonType === type && type2 === \"all\")\n          return pokemon;\n        // get pokemon based on generation and secondary type\n        else if (pokemonGen === gen && type === \"all\" && pokemonType2 === type2)\n          return pokemon;\n        // get pokemon based on primary and secondary type\n        else if (\n          gen === \"all\" &&\n          pokemonType === type &&\n          pokemonType2 === type2\n        )\n          return pokemon;\n        // get pokemon based only on generation\n        else if (pokemonGen === gen && type === \"all\" && type2 === \"all\")\n          return pokemon;\n        // get pokemon based only on primary type\n        else if (gen === \"all\" && pokemonType === type && type2 === \"all\")\n          return pokemon;\n        // get pokemon based only on secondary type\n        else if (gen === \"all\" && type === \"all\" && pokemonType2 === type2)\n          return pokemon;\n        // get all pokemon\n        else if (gen === \"all\" && type === \"all\" && type2 === \"all\")\n          return pokemon;\n        else return null;\n      } else {\n        return pokemonName.includes(name.toLowerCase());\n      }\n    });\n\n    let handleSelect = (event) => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value,\n      });\n    };\n\n    let handleInput = (event) => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({ [name]: value });\n    };\n\n    let width,\n      height = 200;\n    return (\n      <div>\n        <Header />\n        {/* div container for team */}\n        {/* <h2>Team</h2> */}\n        <div className={\"team-container\"}>\n          {team.map((pokemon) => {\n            let fill = fillColour[pokemon.Type];\n            let border = \"47685e\";\n            if (pokemon.Type2 === \"\") border = borderColour[pokemon.Type];\n            else border = borderColour[pokemon.Type2];\n            let style = {\n              backgroundColor: `#${fill}`,\n              border: `5px solid #${border}`,\n            };\n\n            let name = <p>{pokemon.Name}</p>;\n\n            let types;\n\n            console.log(pokemon.Name, pokemon.Type2 === \"\");\n\n            if (pokemon.Type2 === \"\") {\n              types = (\n                <div className={`type-container`}>\n                  <p className={`${pokemon.Type} type`}>{pokemon.Type}</p>\n                </div>\n              );\n            } else {\n              types = (\n                <div className={`type-container`}>\n                  <p className={`${pokemon.Type} type`}>{pokemon.Type}</p>\n                  <p className={`${pokemon.Type2} type`}>{pokemon.Type2}</p>\n                </div>\n              );\n            }\n\n            // let abilities = (\n            //   <div className={``}>\n            //     <p>Ability</p>\n            //     <p>{pokemon.Ability}</p>\n            //     <p>{pokemon.Ability2}</p>\n            //   </div>\n            // );\n\n            // let hiddenAbility;\n\n            // if (pokemon.HiddenAbility === \"\") {\n            //   hiddenAbility = null;\n            // } else {\n            //   hiddenAbility = (\n            //     <div>\n            //       <p>Hidden Ability</p>\n            //       <p>{pokemon.HiddenAbility}</p>\n            //     </div>\n            //   );\n            // }\n\n            return (\n              <div className={`pokemon-container`} key={pokemon.No}>\n                <img\n                  src={`../assets/images/${pokemon.No}.png`}\n                  alt={pokemon.Name}\n                  style={style}\n                  width={width}\n                  height={height}\n                  onClick={() => {\n                    this.removeTeamMember(pokemon);\n                  }}\n                ></img>\n                {name}\n                {types}\n                {/* {abilities}\n                {hiddenAbility} */}\n                <BarChart key={`${pokemon.No}Stats`} {...pokemon} />\n              </div>\n            );\n          })}\n        </div>\n        <div id={`stats-container`} className={\"stats-container\"}>\n          {team.map((pokemon) => {\n            if (team.length !== 0) {\n              return (\n                <TypeEffectiveness\n                  key={`${pokemon.No}Weaknesses`}\n                  width={width}\n                  {...pokemon}\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n        {/* Filters */}\n        <h2>Filters</h2>\n        <div className={\"filter-container\"}>\n          <div>\n            <p>Gen</p>\n            <select name=\"gen\" value={this.state.gen} onChange={handleSelect}>\n              {gens.map((gen) => {\n                return (\n                  <option key={gen} value={gen}>\n                    {gen}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          {/* primary type */}\n          <div>\n            <p>Type</p>\n            <select name=\"type\" value={this.state.type} onChange={handleSelect}>\n              {types.map((type) => {\n                return (\n                  <option key={type} value={type}>\n                    {type}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          {/* secondary type */}\n          <div>\n            <p>Type2</p>\n            <select\n              name=\"type2\"\n              value={this.state.type2}\n              onChange={handleSelect}\n            >\n              {types.map((type2) => {\n                return (\n                  <option key={type2} value={type2}>\n                    {type2}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div>\n            <p>Stats</p>\n            <select name=\"stat\" value={this.state.stat} onChange={handleSelect}>\n              {stats.map((stat) => {\n                return (\n                  <option key={stat} value={stat}>\n                    {stat}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div>\n            <p>Search</p>\n            <input\n              name=\"name\"\n              value={this.state.name}\n              onChange={handleInput}\n            ></input>\n          </div>\n        </div>\n        {/* pokemon icons */}\n        <div className={\"icon-container \"}>\n          <ul className={``}>\n            {filterPokemon.map((pokemon) => {\n              let fill = fillColour[pokemon.Type];\n              let border = \"47685e\";\n              if (pokemon.Type2 === \"\") border = borderColour[pokemon.Type];\n              else border = borderColour[pokemon.Type2];\n              return (\n                <li\n                  className={\"icon\"}\n                  key={pokemon.No}\n                  onClick={(event) => {\n                    if (\n                      (team.length === 0 || team.length < 6) &&\n                      !team.includes(pokemon)\n                    ) {\n                      this.addTeamMember(pokemon);\n                    }\n                  }}\n                >\n                  <img\n                    className={`icon`}\n                    height={90}\n                    width={90}\n                    style={{\n                      backgroundColor: `#${fill}`,\n                      border: `3px solid #${border}`,\n                    }}\n                    src={`%PUBLIC_URL%/${pokemon.No}.png`}\n                    alt={pokemon.Name}\n                  ></img>\n                  <p>\n                    <b>{pokemon.Name}</b>\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}